<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Login Page with Navbar</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    /* General Body Styling */
    body {
      background-color: #f0f0f0;
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
    }

    /* Header styling if needed */
    header {
      /* The header will take its natural height */
    }

    /* Main content takes full height minus the nav bar height */
    main {
      min-height: calc(100vh - 70px); /* Adjust 70px if your header is taller */
      display: flex;
      justify-content: center;
      align-items: center;
    }

    /* Styling for the login container */
    .login-container {
      background-color: #fff;
      padding: 20px 30px;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      width: 300px;
      text-align: center;
    }

    .login-container h1 {
      margin-bottom: 20px;
      font-size: 28px;
    }

    /* Style each form field container */
    form div {
      margin-bottom: 15px;
      text-align: left;
    }

    label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
    }

    /* Input fields styling */
    input[type="text"],
    input[type="password"] {
      width: 100%;
      padding: 10px;
      font-size: 16px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }

    /* Login button styling */
    button#loginButton {
      width: 100%;
      padding: 10px;
      font-size: 18px;
      border: none;
      border-radius: 4px;
      background-color: #007BFF;
      color: #fff;
      cursor: pointer;
      transition: background-color 0.3s;
      position: relative; /* helpful for repositioning on hover if needed */
    }

    button#loginButton:hover {
      background-color: #0056b3;
    }

    /* Custom styling for nav items with boxes */
    .custom-box {
      border: 1px solid #ccc;
      padding: 5px 10px;
      border-radius: 5px;
      display: inline-flex;
      align-items: center;
      min-height: 40px;
    }
    .custom-box .nav-link {
      margin: 0;
    }
  </style>
</head>
<body>


  <!-- Centered Login Form -->
  <main>
    <div class="login-container">
      <h1>Login</h1>
      <form id="loginForm" method="POST" action="/login">
        <div>
          <label for="username">Username:</label>
          <input type="text" id="username" name="username" />
        </div>
        <div>
          <label for="password">Password:</label>
          <input type="password" id="password" name="password" />
        </div>
        <!-- The tricky button! -->
        <button id="loginButton" type="submit">Login</button>
      </form>
    </div>
  </main>

  <!-- Bootstrap JS (with Popper) -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const loginButton = document.getElementById('loginButton');
    const usernameInput = document.getElementById('username');
    const passwordInput = document.getElementById('password');

    window.addEventListener('load', () => {
      setTimeout(() => {
        console.log('After delay, Username:', usernameInput.value);
      }, 500); // delay 500ms to let auto-fill finish
    });

    // Helper function to check if both username and password are filled out
    function isFormValid() {
      console.log('Username:', usernameInput.value, 'Password:', passwordInput.value);
      return usernameInput.value.trim() !== '' && passwordInput.value.trim() !== '';
    }

    // If the user hovers over the button and the form is not valid,
    // move the button to a random position on the screen.
    loginButton.addEventListener('mouseover', (event) => {
      if (!isFormValid()) {
        const maxX = window.innerWidth - loginButton.offsetWidth;
        const maxY = window.innerHeight - loginButton.offsetHeight;
        // Generate random positions
        const randomX = Math.floor(Math.random() * maxX);
        const randomY = Math.floor(Math.random() * maxY);
        // Position the button absolutely
        loginButton.style.position = 'absolute';
        loginButton.style.left = `${randomX}px`;
        loginButton.style.top = `${randomY}px`;
      }
    });

    // Prevent form submission if the fields are not filled
    loginButton.addEventListener('click', (event) => {
      if (!isFormValid()) {
        event.preventDefault();
        alert('Please enter both username and password before logging in!');
      }
    });
  </script>
</body>
</html>
